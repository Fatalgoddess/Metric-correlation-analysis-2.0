package vulnerabilitySearch;

import java.util.HashSet;

import org.elasticsearch.search.SearchHit;

import projectSelection.Repository;

public class VulnerabilityMetricsCalculator {

	private VulnerabilityDataQueryHandler vulnerabilityDataQueryHandler = new VulnerabilityDataQueryHandler();

	// Amount of bugs for version
	public int getNumberOfBugsPerVersion(Repository repository, String version) {
		HashSet<SearchHit> getVulnerabilities = vulnerabilityDataQueryHandler
				.getVulnerabilities(repository.getProduct(), repository.getVendor(), version, "TWO");
		return vulnerabilityDataQueryHandler.getNumberOfVulnerabilities(getVulnerabilities);
	}

	// Average CVSS2 score for version
	public double getAverageCVSS2ScoreForVersion(Repository repository, String version) {
		HashSet<SearchHit> getVulnerabilities = vulnerabilityDataQueryHandler
				.getVulnerabilities(repository.getProduct(), repository.getVendor(), version, "TWO");
		return vulnerabilityDataQueryHandler.getAverageCVSS2Score(getVulnerabilities);
	}
	// Average CVSS3 score for version
	public double getAverageCVSS3ScoreForVersion(Repository repository, String version) {
		HashSet<SearchHit> getVulnerabilities = vulnerabilityDataQueryHandler
				.getVulnerabilities(repository.getProduct(), repository.getVendor(), version, "TWO");
		return vulnerabilityDataQueryHandler.getAverageCVSS3Score(getVulnerabilities);
	}
}
